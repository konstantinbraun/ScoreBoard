<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="AgeFrom" xml:space="preserve">
    <value>Age from</value>
  </data>
  <data name="AgeTo" xml:space="preserve">
    <value>Age to</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Coach" xml:space="preserve">
    <value>Coach</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Distinction" xml:space="preserve">
    <value>Distinction</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Fights" xml:space="preserve">
    <value>Fights</value>
  </data>
  <data name="FinishedFights" xml:space="preserve">
    <value>Finished Fights</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GenerateTable" xml:space="preserve">
    <value>Generate fight table</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="kg" xml:space="preserve">
    <value>kg.</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NotDefined" xml:space="preserve">
    <value>Not defined</value>
  </data>
  <data name="OneThirdPlace" xml:space="preserve">
    <value>One third place </value>
  </data>
  <data name="Organizer" xml:space="preserve">
    <value>Organizer</value>
  </data>
  <data name="Participant" xml:space="preserve">
    <value>Participant</value>
  </data>
  <data name="Participants" xml:space="preserve">
    <value>Participants</value>
  </data>
  <data name="Place" xml:space="preserve">
    <value>Place</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Ranking" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="Referee" xml:space="preserve">
    <value>Referee</value>
  </data>
  <data name="Referees" xml:space="preserve">
    <value>Referees</value>
  </data>
  <data name="RegistrationEnd" xml:space="preserve">
    <value>Registration end</value>
  </data>
  <data name="ReplaceParticipant" xml:space="preserve">
    <value>Replace Participant</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>The "{0}" field is required.</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SelectItem" xml:space="preserve">
    <value>Seelect item</value>
  </data>
  <data name="Sport" xml:space="preserve">
    <value>Sport</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="StartPage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="Teams" xml:space="preserve">
    <value>Teams</value>
  </data>
  <data name="Timeline" xml:space="preserve">
    <value>Timeline</value>
  </data>
  <data name="TotalPaging" xml:space="preserve">
    <value>Page {0} of {1} ({2} items)</value>
  </data>
  <data name="Tournament" xml:space="preserve">
    <value>Tournament</value>
  </data>
  <data name="Tournaments" xml:space="preserve">
    <value>Tournaments</value>
  </data>
  <data name="Translation" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="UpcomingFights" xml:space="preserve">
    <value>Upcoming Fights</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="WeightFrom" xml:space="preserve">
    <value>Weight from</value>
  </data>
  <data name="WeightTo" xml:space="preserve">
    <value>Weight to</value>
  </data>
  <data name="Years" xml:space="preserve">
    <value>years</value>
  </data>
  <data name="GreaterThen" xml:space="preserve">
    <value>The field "{0}" must be greater than or equal to {1}</value>
  </data>
  <data name="LessThen" xml:space="preserve">
    <value>The field "{0}" must be less than or equal to {1}</value>
  </data>
  <data name="RegistrationComplete" xml:space="preserve">
    <value>Registration is complete</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="AddTeam" xml:space="preserve">
    <value>Add team</value>
  </data>
  <data name="AddTournament" xml:space="preserve">
    <value>Add tournament</value>
  </data>
  <data name="Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="AddParticipant" xml:space="preserve">
    <value>Add participant</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add category</value>
  </data>
  <data name="AddReferee" xml:space="preserve">
    <value>Add referee</value>
  </data>
  <data name="DropDownButtonInfo" xml:space="preserve">
    <value>Please use the button "{0}" for more options.</value>
  </data>
  <data name="DropDownButton" xml:space="preserve">
    <value>My actions</value>
  </data>
  <data name="AddTimeline" xml:space="preserve">
    <value>Add timeline</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="AddTranslation" xml:space="preserve">
    <value>Add translation</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="Japanese" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="Russian" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="AddUnit" xml:space="preserve">
    <value>Add unit "{0}"</value>
  </data>
  <data name="AnotherService" xml:space="preserve">
    <value>Use another service to log in.</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create a new account.</value>
  </data>
  <data name="ForgetPassword" xml:space="preserve">
    <value>Forget your password?</value>
  </data>
  <data name="LocalAccount" xml:space="preserve">
    <value>Use a local account to log in.</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterNewUser" xml:space="preserve">
    <value>Register a new user?</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="ParticipationConfirmed" xml:space="preserve">
    <value>Participation confirmed</value>
  </data>
  <data name="WaitingForConfirmation" xml:space="preserve">
    <value>Waiting for confirmation</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="TwoThirdPlaces" xml:space="preserve">
    <value>Two third places</value>
  </data>
  <data name="Winner" xml:space="preserve">
    <value>The winner is "{0}"</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="AddImage" xml:space="preserve">
    <value>Add image</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="ChangeImage" xml:space="preserve">
    <value>Change image</value>
  </data>
  <data name="DeleteImage" xml:space="preserve">
    <value>Delete image</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="ExternalLogin" xml:space="preserve">
    <value>Log in using your {0} account</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordError" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="EnterYourEmail" xml:space="preserve">
    <value>Enter your email.</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Email confirmation</value>
  </data>
  <data name="AddGroup" xml:space="preserve">
    <value>Add group</value>
  </data>
  <data name="ConfirmEmailError" xml:space="preserve">
    <value>Your email address is not confirmed. In order to do it click the link in the email, that you should have received during the registration process. </value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="InvalidLoginAttempt" xml:space="preserve">
    <value>Invalid login attempt.</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="AssociateAccount" xml:space="preserve">
    <value>Associate your {0} account</value>
  </data>
  <data name="ConfirmEmailInfo" xml:space="preserve">
    <value>Please check your email and confirm your email address.</value>
  </data>
  <data name="ConfirmEmailSuccess" xml:space="preserve">
    <value>Thank you for confirming your email.</value>
  </data>
</root>